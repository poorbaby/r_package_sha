library("googlesheets")
googlekey <- gs_url("https://docs.google.com/spreadsheets/d/1KdOw0FIxY2Kt8UgY16F3UMQSC7KJaBgtmewNZUGuLY8/edit#gid=0",lookup = FALSE,visibility = "public")
mydata <- gs_read(googlekey, skip = 3)
knitr::kable(head(mydata), format = "markdown", align = 'c')
library(sha)
c <- classifyday(df = mydata, x = "DayofWeek")
mydata$DayType <- as.factor(c)
knitr::kable(head(mydata), format = "markdown", align = 'c', caption = "Sleep Health Data Set")
plot_scatter(mydata,"Weight","SleepDuration", "DayType")
plot_scatter(mydata,"Activity","SleepDuration", "DayType")
knitr::kable(paircorr(mydata), format = "markdown", align = "l", padding = 2 )
slm <- function(data, x, y){
model.t = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y," association with ", x))
abline(model.t, lty = 2)
}
slm(mydata, "Activity", "SleepDuration")
slm <- function(data, x, y){
model.t = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y," association with ", x))
abline(model.t, lty = 2, color = "red")
}
slm(mydata, "Activity", "SleepDuration")
slm <- function(data, x, y){
model.t = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y," association with ", x))
abline(model.t, lty = 2, col = "red")
}
slm <- function(data, x, y){
model.t = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y," association with ", x))
abline(model.t, lty = 2, col = "red")
}
slm(mydata, "Activity", "SleepDuration")
summary(model.t)
slm <- function(data, x, y){
model.t = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y," association with ", x))
abline(model.t, lty = 2, col = "red")
summary(model.t)
}
slm(mydata, "Activity", "SleepDuration")
slm(mydata, "Tempreture", "Heart Rate")
slm <- function(data, x, y){
model.t = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y," association with ", x))
abline(model.t, lty = 2, col = "red")
summary(model.t)
plot(model.t)
}
slm(mydata, "Tempreture", "Heart Rate")
slm <- function(data, x, y){
model.t = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y," association with ", x))
abline(model.t, lty = 2, col = "red")
summary(model.t)
}
slm(mydata, "Tempreture", "Heart Rate")
slm
class(slm(mydata, "Tempreture", "Heart Rate"))
unclass(slm(mydata, "Tempreture", "Heart Rate"))
unclass(slm(mydata, "Tempreture", "Heart Rate"))[1]
plot(unclass(slm(mydata, "Tempreture", "Heart Rate"))[1])
plot(unlist(slm(mydata, "Tempreture", "Heart Rate"))[1])
slm <- function(data, x, y){
model.t <-  lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab <-  x,
ylab <-  y,
main <-  paste(y," association with ", x))
abline(model.t, lty = 2, col = "red")
summary(model.t)
}
slm(mydata, "Tempreture", "Heart Rate")
slm <- function(data, x, y){
model.t = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y," association with ", x))
abline(model.t, lty = 2, col = "red")
summary(model.t)
}
slm(mydata, "Tempreture", "Heart Rate")
slm <- function(data, x, y){
model.t = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model.t, lty = 2, col = "red")
summary(model.t)
}
slm(mydata, "Tempreture", "Heart Rate")
slm <- function(data, x, y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
summary(model.t)
}
slm(mydata, "Tempreture", "Heart Rate")
slm <- function(data, x, y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
summary(model)
}
slm(mydata, "Tempreture", "Heart Rate")
slm_log <- function(data, x, y){
model.t = lm(log(data[[y]]) ~ data[[x]])
plot(data[[x]], log(data[[y])],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model.t, lty = 2, col = "blue")
summary(model.t)
}
slm_log <- function(data, x, y){
model.t = lm(log(data[[y]]) ~ data[[x]])
plot(data[[x]], log(data[[y]]),
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model.t, lty = 2, col = "blue")
summary(model.t)
}
slm(mydata, "Tempreture", "Heart Rate")
slm_log <- function(data, x, y){
model.t = lm(log(data[[y]]) ~ data[[x]])
plot(data[[x]], log(data[[y]]),
xlab = x,
ylab = paste("log tansformed",y)
main = paste(y,"association with", x))
abline(model.t, lty = 2, col = "blue")
summary(model.t)
}
slm_log <- function(data, x, y){
model.t = lm(log(data[[y]]) ~ data[[x]])
plot(data[[x]], log(data[[y]]),
xlab = x,
ylab = paste("log tansformed",y)
main = paste(y,"association with", x))
abline(model.t, lty = 2, col = "blue")
summary(model.t)
}
slm_log <- function(data, x, y){
model.t = lm(log(data[[y]]) ~ data[[x]])
plot(data[[x]], log(data[[y]]),
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model.t, lty = 2, col = "blue")
summary(model.t)
}
slm_log <- function(data, x, y){
model.t = lm(log(data[[y]]) ~ data[[x]])
plot(data[[x]], log(data[[y]]),
xlab = x,
ylab = paste("log transformed",y),
main = paste(y,"association with", x))
abline(model.t, lty = 2, col = "blue")
summary(model.t)
}
slm_log(mydata, "Tempreture", "Heart Rate")
head(sleepduration)
slm(sleepduration, "Tempreture", "Heart Rate")
?slm
?slm
?slm
?slm_log
slm_s <- function(data, x, y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
summary(model)
}
devtools::load_all(".")
?slm_s
slm
?slm
slm_log(sleepduration, "Tempreture", "Heart Rate")
?slm_log
?slm
devtools::load_all(".")
?slm_log
?slm_log
library(sha)
slm(mydata, x = "Tempreture", y="Heart Rate")
slm(mydata, x = "Tempreture", y="Heart Rate")
library(sha)
slm_s(mydata, x = "Tempreture", y="Heart Rate")
slm_s
unlist(slm_s(mydata, x = "Tempreture", y="Heart Rate"))
slm_s(mydata, x = "Tempreture", y="Heart Rate")
knitr::kable(slm_s)
slm_s(mydata, x = "Tempreture", y="Heart Rate")
knitr::kable(slm_s[1])
slm_s(mydata, x = "Tempreture", y="Heart Rate")
knitr::kable(slm_s)
#' @examples
#' slm(sleepduration, "Tempreture", "Heart Rate")
slm_s <- function(data, x, y){
model = lm(data[[y]]~data[[x]])
summary(model)
}
slm_s(mydata, x = "Tempreture", y="Heart Rate")
slm_s(mydata, x = "Tempreture", y="Heart Rate")
knitr::kable(slm_s)
slm_s(mydata, x = "Tempreture", y="Heart Rate")
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
}
modelplot(sleepduration,"Tempreture", "Heart Rate")
logmodelplot <- function(data,x,y){
model.t = lm(log(data[[y]]) ~ data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model.t, lty = 2, col = "red")
}
?log_modelplot
?log_modelplot
devtools::load_all(".")
?log_modelplot
?modelplot
slm_s(mydata, x = "Tempreture", y="Heart Rate")
modelplot(mydata, x = "Tempreture", y="Heart Rate")
slm_s(mydata, x = "Tempreture", y="Heart Rate")
modelplot(mydata, x = "Tempreture", y="Heart Rate")
library(sha)
slm_s(mydata, x = "Tempreture", y="Heart Rate")
modelplot(mydata, x = "Tempreture", y="Heart Rate")
slm_log(mydata, x = "Tempreture", y="Heart Rate")
log_modelplot(mydata, x = "Tempreture", y="Heart Rate")
slm_log(mydata, x = "Activity", y="SleepDuration")
log_modelplot(mydata, x = "Activity", y="SleepDuration")
slm_s(mydata, x = "Activity", y="SleepDuration")
modelplot(mydata, x = "Activity", y="SleepDuration")
library(sha)
source('~/Desktop/sha/R/slm_s.R')
?lm
?min
?abline
?plot
library(sha)
library(sha)
#'
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
}
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
}
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
}
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
}
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
}
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
}
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
}
devtools::load_all(".")
library("googlesheets")
googlekey <- gs_url("https://docs.google.com/spreadsheets/d/1KdOw0FIxY2Kt8UgY16F3UMQSC7KJaBgtmewNZUGuLY8/edit#gid=0",lookup = FALSE,visibility = "public")
mydata <- gs_read(googlekey, skip = 3)
knitr::kable(head(mydata), format = "markdown", align = 'c')
library("googlesheets")
googlekey <- gs_url("https://docs.google.com/spreadsheets/d/1KdOw0FIxY2Kt8UgY16F3UMQSC7KJaBgtmewNZUGuLY8/edit#gid=0",lookup = FALSE,visibility = "public")
mydata <- gs_read(googlekey, skip = 3)
?sleepduration
library("googlesheets")
googlekey <- gs_url("https://docs.google.com/spreadsheets/d/1KdOw0FIxY2Kt8UgY16F3UMQSC7KJaBgtmewNZUGuLY8/edit#gid=0",lookup = FALSE,visibility = "public")
mydata <- gs_read(googlekey, skip = 3)
knitr::kable(head(mydata), format = "markdown", align = 'c')
knitr::kable(head(mydata), format = "markdown", align = 'c')
library("googlesheets")
googlekey <- gs_url("https://docs.google.com/spreadsheets/d/1KdOw0FIxY2Kt8UgY16F3UMQSC7KJaBgtmewNZUGuLY8/edit#gid=0",lookup = FALSE,visibility = "public")
mydata <- gs_read(googlekey, skip = 3, verbose = FALSE)
library("googlesheets")
googlekey <- gs_url("https://docs.google.com/spreadsheets/d/1KdOw0FIxY2Kt8UgY16F3UMQSC7KJaBgtmewNZUGuLY8/edit#gid=0",lookup = FALSE,visibility = "public")
mydata <- gs_read(googlekey, skip = 3)
devtools::load_all(".")
paircorr <- function(data,digits=2) {
con_var <- character()
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
}
}
return(cor(data[,con_var]))
}
paircorr(mydata,digits = 2)
paircorr <- function(data) {
con_var <- character()
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
}
}
return(cor(data[,con_var]))
}
paircorr(mydata,digits = 2)
paircorr(mydata)
devtools::load_all(".")
paircorr <- function(data) {
con_var <- character()
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
}
}
return(cor(data[,con_var]))
}
paircorr(mydata)
paircorr <- function(data) {
con_var <- character()
print(con_var)
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
}
}
return(cor(data[,con_var]))
}
paircorr(mydata)
paircorr <- function(data) {
con_var <- character()
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
print(con_var)
}
}
return(cor(data[,con_var]))
}
paircorr(mydata)
cor(mydata)
cor(mydata[,c(3,4,6,7,8)])
paircorr(sleepduration)
library("googlesheets")
googlekey <- gs_url("https://docs.google.com/spreadsheets/d/1KdOw0FIxY2Kt8UgY16F3UMQSC7KJaBgtmewNZUGuLY8/edit#gid=0",lookup = FALSE,visibility = "public")
mydata <- gs_read(googlekey, skip = 3)
str(mydata)
paircorr(sleepdata)
paircorr(mydata)
View(mydata)
library("googlesheets")
googlekey <- gs_url("https://docs.google.com/spreadsheets/d/1KdOw0FIxY2Kt8UgY16F3UMQSC7KJaBgtmewNZUGuLY8/edit#gid=0",lookup = FALSE,visibility = "public")
mydata <- gs_read(googlekey, skip = 3)
knitr::kable(head(mydata), format = "markdown", align = 'c')
paircorr(mydata)
cor(mydata[,c(3,4,6,7,8)])
cor(mydata[,c(3,4,6,7,8)], digits= 2)
cor(mydata[,c(3,4,6,7,8)])
paircorr <- function(data, digits = 2) {
con_var <- character()
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
}
}
return(round(cor(data[,con_var])), digits = digits)
}
paircorr(mydata)
paircorr <- function(data, digits = 2) {
con_var <- character()
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
}
}
r <- round(cor(data[,con_var])), digits = digits)
return(r)
}
paircorr <- function(data, digits = 2) {
con_var <- character()
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
}
}
return(round(cor(data[,con_var])), digits = digits))
}
paircorr <- function(data, digits = 2) {
con_var <- character()
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
}
}
return(cor(data[,con_var]))
}
paircorr <- function(data, digits = 2) {
con_var <- character()
for (i in colnames(data)) {
if(class(data[[i]]) %in% c("numeric","integer")) {
con_var <- c(con_var,i)
}
}
r <- cor(data[,con_var])
return(round(r, digits = digits))
}
paircorr(mydata)
devtools::load_all(".")
?text
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
Corner_text <- function(text, location="topright"){
legend(location,legend=text, bty ="n", pch=NA)
}
}
modelplot <- function(data,x,y){
model = lm(data[[y]]~data[[x]])
plot(data[[x]],data[[y]],
xlab = x,
ylab = y,
main = paste(y,"association with", x))
abline(model, lty = 2, col = "red")
text(locator(1),"Use the text() with or without the locator() function")
}
modelplot(mydata, x = "Activity", y="SleepDuration")
clear()
clear
layout(matrix(c(1,1,2,2), 2, 2, byrow = T), heights = c(4,1))
plot(rnorm(10),ylab="", xlab="Use the xlab argument", main="Use the title", ty="o", pch=19)
mtext("Use the mtext() function")
temp <- locator(1) # On the chart, click where you would like the text to appear
devtools::load_all(".")
modelplot(mydata, x = "Activity", y="SleepDuration")
